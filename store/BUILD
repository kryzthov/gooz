# package //store
package(default_visibility = ["//visibility:public"])

cc_library(
    name="store",
    srcs=[
        "arity.cc",
        "array.cc",
        "atom.cc",
        "boolean.cc",
        "bytecode.cc",
        "cell.cc",
        "closure.cc",
        "compiler.cc",
        "engine.cc",
        "environment.cc",
        "float.cc",
        "heap_value.cc",
        "integer.cc",
        "list.cc",
        "literal.cc",
        "moved_value.cc",
        "name.cc",
        "open_record.cc",
        "ozvalue.cc",
        "record.cc",
        "store.cc",
        "string.cc",
        "thread.cc",
        "tuple.cc",
        "value.cc",
        "variable.cc",
    ],
    hdrs=[
        "arity.h",
        "arity.inl.h",
        "arity_map.h",
        "array.h",
        "atom.h",
        "boolean.h",
        "bytecode.h",
        "cell.h",
        "closure.h",
        #"code.h",
        "compiler.h",
        "engine.h",
        "environment.h",
        "float.h",
        "heap_value.h",
        "integer.h",
        "integer.inl.h",
        "list.h",
        "list.inl.h",
        "literal.h",
        "moved_value.h",
        "name.h",
        "open_record.h",
        "open_record.inl.h",
        "ozvalue.h",
        "record.h",
        "record.inl.h",
        "small_integer.h",
        "small_integer.inl.h",
        "store.h",
        "string.h",
        "thread.h",
        "thread.inl.h",
        "tuple.h",
        "tuple.inl.h",
        "type.h",
        "value.h",
        "value.inl.h",
        "values.h",
        "variable.h",

    ],
    deps=[
        "//base",
        "//proto",
    ],
)

cc_test(
    name="store_test",
    srcs=[
        "arity_test.cc",
        "atom_test.cc",
        "equality_test.cc",
        "integer_test.cc",
        "list_test.cc",
        "open_record_test.cc",
        "ozvalue_test.cc",
        "small_integer_test.cc",
        "unification_test.cc",
        "values_test.cc",
    ],
    deps=[
        ":store",
        "//combinators",
        "//base:test",
    ],
)

# The bytecode (*.ozb) parser is not compiling right now
# cc_test(
#     name="bytecode_test",
#     srcs=["bytecode_test.cc"],
#     deps=[
#         ":store",
#         "//combinators:bytecode",
#         "//base:test",
#     ],
# )

cc_binary(
    name="run_ozc",
    srcs=["compile_run_bytecode.cc"],
    deps=[
        ":store",
        "//combinators",
    ],
)
